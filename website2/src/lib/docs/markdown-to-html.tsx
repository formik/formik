import remark from 'remark';
import html from 'remark-html';
import github from 'remark-github';
import footnotes from 'remark-footnotes';
import toc from 'remark-toc';
import headings from 'remark-autolink-headings';
import slug from 'remark-slug';
import images from 'remark-images';
import shiki from 'rehype-shiki';
import r2r from 'remark-rehype';
import format from 'rehype-format';
import stringify from 'rehype-stringify';
import visit from 'unist-util-visit';

const tocPlugin = () => (tree: any, file: any) => {
  file.data.headings = [];
  visit(tree, 'heading', (node) => {
    const depth = node.depth;
    let text = '';
    let type;
    let url = '';
    visit(node, 'link', (linkNode) => {
      url += linkNode.url;
    });

    visit(node, 'inlineCode', (inlineCodeNode) => {
      text += inlineCodeNode.value;
      type = inlineCodeNode.type;
    });

    visit(node, 'text', (textNode) => {
      text += textNode.value;
      type = textNode.type;
    });

    file.data.headings.push({ text, depth, url });
  });
};
export async function markdownToHtml(markdown: string) {
  const { data } = await remark()
    .use(slug)
    .use(headings)
    .use(tocPlugin)
    .process(markdown);
  const result = await remark()
    .use(slug)
    .use(headings, {
      behavior: 'append',
      linkProperties: {
        class: ['anchor'],
        title: 'Direct link to heading',
      },
    })
    .use(toc)
    .use(footnotes)
    .use(images)
    .use(github, { repository: 'https://github.com/jaredpalmer/formik' })
    .use(r2r)
    .use(format)
    .use(shiki, {
      theme: 'Material-Theme-Palenight-High-Contrast',
      // useBackground: true,
    })
    .use(stringify)
    .process(markdown);
  return {
    html: result.toString().replace('<AUTOGENERATED_TABLE_OF_CONTENTS>', ''),
    toc: data,
  };
}
